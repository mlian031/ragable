# .github/workflows/deploy.yml
name: Deploy to Cloud Run via Cloud Deploy

on:
  push:
    branches:
      - main # Trigger deployment on pushes to the main branch

env:
  PROJECT_ID: ragable
  REGION: us-central1
  GAR_LOCATION: us-central1 # Artifact Registry location (can differ from REGION)
  APP_NAME: ragable # Base name for image/service if needed, adjust as necessary
  PIPELINE_NAME: ragable-v2
  CLOUD_RUN_SERVICE_NAME: ragable-uscentral1-prod # Target service name

jobs:
  build-and-deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write' # Needed for Workload Identity Federation

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Google Auth via WIF
      id: auth
      uses: google-github-actions/auth@v2
      with:
        workload_identity_provider: ${{ secrets.WIF_PROVIDER }} # From GitHub secrets
        service_account: ${{ secrets.WIF_SERVICE_ACCOUNT }} # From GitHub secrets

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v2
      with:
        project_id: ${{ env.PROJECT_ID }}

    - name: Docker Auth - Configure Docker to use gcloud credential helper
      run: gcloud auth configure-docker ${{ env.GAR_LOCATION }}-docker.pkg.dev --quiet

    - name: Build and Push Container Image
      run: |-
        docker build \
          --build-arg GOOGLE_VERTEX_PROJECT=${{ env.PROJECT_ID }} \
          --build-arg GOOGLE_VERTEX_LOCATION=${{ env.REGION }} \
          --build-arg NEXT_PUBLIC_SUPABASE_URL=${{ secrets.NEXT_PUBLIC_SUPABASE_URL }} \
          --build-arg NEXT_PUBLIC_SUPABASE_ANON_KEY=${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }} \
          -t "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/ragable-prod/${{ env.APP_NAME }}:${{ github.sha }}" \
          --file Dockerfile .
        docker push "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/ragable-prod/${{ env.APP_NAME }}:${{ github.sha }}"

    - name: Get short SHA
      id: sha
      run: echo "short_sha=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

    - name: Create Cloud Deploy Release
      id: create_release
      uses: google-github-actions/create-cloud-deploy-release@v1
      with:
        delivery_pipeline: ${{ env.PIPELINE_NAME }}
        region: ${{ env.REGION }}
        skaffold_file: skaffold.yaml
        # Pass the specific image built in the previous step
        images: ${{ env.APP_NAME }}_image=${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/ragable-prod/${{ env.APP_NAME }}:${{ github.sha }}
        # Optional: Add description
        # description: "Triggered by GitHub Actions commit ${{ github.sha }}"
        name: "release-${{ steps.sha.outputs.short_sha }}" # Use output from previous step
