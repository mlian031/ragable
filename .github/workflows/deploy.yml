# .github/workflows/deploy.yml
name: Deploy to Cloud Run

on:
  push:
    branches:
      - main # Trigger deployment on pushes to the main branch

env:
  PROJECT_ID: ragable
  REGION: us-central1
  GAR_LOCATION: us-central1 # Artifact Registry location (can differ from REGION)
  APP_NAME: ragable # Base name for image/service if needed, adjust as necessary
  CLOUD_RUN_SERVICE_NAME: ragable-uscentral1-prod # Target service name
  # Runtime Service Account used by Cloud Run
  CLOUD_RUN_SERVICE_ACCOUNT: github-actions-deployer@ragable.iam.gserviceaccount.com

jobs:
  build-and-deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write' # Needed for Workload Identity Federation

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Google Auth via WIF
      id: auth
      uses: google-github-actions/auth@v2
      with:
        workload_identity_provider: ${{ secrets.WIF_PROVIDER }} # From GitHub secrets
        service_account: ${{ secrets.WIF_SERVICE_ACCOUNT }} # From GitHub secrets

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v2
      with:
        project_id: ${{ env.PROJECT_ID }}

    - name: Docker Auth - Configure Docker to use gcloud credential helper
      run: gcloud auth configure-docker ${{ env.GAR_LOCATION }}-docker.pkg.dev --quiet

    - name: Build and Push Container Image
      id: build-image # Give this step an ID
      run: |-
        docker build \
          --build-arg GOOGLE_VERTEX_PROJECT=${{ env.PROJECT_ID }} \
          --build-arg GOOGLE_VERTEX_LOCATION=${{ env.REGION }} \
          --build-arg NEXT_PUBLIC_SUPABASE_URL=${{ secrets.NEXT_PUBLIC_SUPABASE_URL }} \
          --build-arg NEXT_PUBLIC_SUPABASE_ANON_KEY=${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }} \
          -t "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/ragable-prod/${{ env.APP_NAME }}:${{ github.sha }}" \
          --file Dockerfile .
        docker push "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/ragable-prod/${{ env.APP_NAME }}:${{ github.sha }}"
        # Set image URI as output (optional but good practice)
        echo "image_uri=${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/ragable-prod/${{ env.APP_NAME }}:${{ github.sha }}" >> $GITHUB_OUTPUT

    # Removed 'Get short SHA' and 'Create Cloud Deploy Release' steps

    - name: Deploy to Cloud Run
      id: deploy
      uses: google-github-actions/deploy-cloudrun@v2
      with:
        service: ${{ env.CLOUD_RUN_SERVICE_NAME }}
        region: ${{ env.REGION }}
        # Use the image pushed in the previous step
        image: ${{ steps.build-image.outputs.image_uri }}
        # Define non-sensitive environment variables
        env_vars: |
          NEXT_PUBLIC_SITE_URL=https://ragable.ca
          GOOGLE_VERTEX_PROJECT=${{ env.PROJECT_ID }}
          GOOGLE_VERTEX_LOCATION=${{ env.REGION }}
        # Define secrets from Secret Manager
        secrets: |
          SUPABASE_SERVICE_ROLE_KEY=supabase-service-role-key:latest
          NEXT_SUPABASE_DB_PASSWORD=supabase-db-password:latest
          NEXT_PUBLIC_SUPABASE_URL=next-public-supabase-url:latest
          NEXT_PUBLIC_SUPABASE_ANON_KEY=next-public-supabase-anon-key:latest
        # Pass additional flags, including the runtime service account
        flags: '--service-account=${{ env.CLOUD_RUN_SERVICE_ACCOUNT }}'

    # Optional: Output the deployed service URL
    - name: Show Deployed URL
      run: echo "Deployed to ${{ steps.deploy.outputs.url }}"
